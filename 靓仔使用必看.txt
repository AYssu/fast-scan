1.0.5 更新日志
新增对对比指针的统计
优化指针对比速度 提示30% 

(注意:为什么不更新对比生成二进制呢，因为大文件对比不完是不写入二进制的，意味着只要你没对比完都没二进制写入，中途程序断了你就要重新对比，但是输出文本就不会出现这种情况)
注意，当前还是单线程对比，为嘛不写多线程呢，因为分配不过来，常规按照模块分线程，但是fast_scan的初衷是扫单模块，单层级，况且基本速度绝对能够保证的

1.0.4 更新日志
增加文本指针载入，便捷的查看指针数据，可以方便确定指针是否能够使用
新增文本文件不对比模块头
libxxx.so和bss 需要分开扫，不然bss会把前面的cd指针吃了



1.0.3 更新日志

新规范如下
1.规范了输出目录为储存目录的fscan下，意味着你需要把sh的二进制解压到/storage/emulated/0/fscan目录下
2.配置文件已经输出文件都在那，apk和sh都是，统一了储存位置
3.当然你的二进制和run.sh无论在哪都能执行，只是输出目录是固定的
4.然后输出的文件名称是文件名，不要包含路径了，路径已经统一
5.请不管是多少层的指针都尽量限制对比数量，要不然一不小心就卡死了
6.模块的输出就是指针头，对照gg即可，但是解析不完全，已实际情况为准

目前的缺陷如下
1.cd和bss不能一起扫，libunity.so和libunity.so:bss按照模块分开扫,优先bss,提示没指针就找cd
2.部分手机无法正确识别模块，这个我也没办法，用其他的吧
3.扫不了p2，小部分奇奇怪怪的游戏说不定也扫不到
4.不支持32 不是不能支持 单纯不想 现在也不搞32位游戏了

新增功能如下
1.把文本对比写回来了，因为扫三次不是会对比出两个文本文件吗，还是要对文本取相同的
2.部分手机还是什么的原因导致无法同目录写成，所以全部统一了，算修复了一个bug，固定了输出路径，移除隐藏文件，防止被吃垃圾模块删了
3.优化了ksu退出终端CPU占用100% 因为ksu无法直接杀死进程，新版本不会出现这破情况了(我打着游戏突然发现手机烫，看了一下进程，fast_scan跑100cpu了 magisk应该没这破问题)

c扫不适合全部用户，如果没有想要的功能那就没办法，我只是尽可能的完善了一下这些限制条件
==============================================================================================================================================


必看须知

1. 如果你是root用户，在mt运行的，运行run.sh即可，如果/data 不可用 就改一下脚本里面的运行目录
2. 输出路径统一在/storage/emulated/0/fscan下
3. 不适配框架，框架扫什么基址(苦笑)

推荐直接执行二进制，因为虚拟机那个输入就是💩

如果apk那个终端不好用直接用sh就行了 已适配虚拟机
群: 903485530